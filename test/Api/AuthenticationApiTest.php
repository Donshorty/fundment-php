<?php
/**
 * AuthenticationApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fundment API
 *
 * <div><a href=\"/staging/\"><h1>Getting started</h1></a> </div>
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AuthenticationApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AuthenticationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createMultiFactorAuthenticationRegisterOtpApp
     *
     * Create Multi Factor Authentication Register Otp App.
     *
     */
    public function testCreateMultiFactorAuthenticationRegisterOtpApp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteMultiFactorAuthenticationRegisterOtpApp
     *
     * Delete Multi Factor Authentication Register Otp App.
     *
     */
    public function testDeleteMultiFactorAuthenticationRegisterOtpApp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMultiFactorAuthenticationRegisterOtpApps
     *
     * Get Multi Factor Authentication Register Otp Apps.
     *
     */
    public function testGetMultiFactorAuthenticationRegisterOtpApps()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for handleForgottenPassword
     *
     * Handle Forgotten Password.
     *
     */
    public function testHandleForgottenPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for handleResetPassword
     *
     * Handle Reset Password.
     *
     */
    public function testHandleResetPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for login
     *
     * Login.
     *
     */
    public function testLogin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginGoogle
     *
     * Login Google.
     *
     */
    public function testLoginGoogle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for loginMicrosoft
     *
     * Login Microsoft.
     *
     */
    public function testLoginMicrosoft()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for logout
     *
     * Logout.
     *
     */
    public function testLogout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multiFactorAuthenticationIpAddressWhitelistDisable
     *
     * Multi Factor Authentication Ip Address Whitelist Disable.
     *
     */
    public function testMultiFactorAuthenticationIpAddressWhitelistDisable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multiFactorAuthenticationIpAddressWhitelistEnable
     *
     * Multi Factor Authentication Ip Address Whitelist Enable.
     *
     */
    public function testMultiFactorAuthenticationIpAddressWhitelistEnable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multiFactorAuthenticationMethods
     *
     * Multi Factor Authentication Methods.
     *
     */
    public function testMultiFactorAuthenticationMethods()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multiFactorAuthenticationSendOtp
     *
     * Multi Factor Authentication Send Otp.
     *
     */
    public function testMultiFactorAuthenticationSendOtp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multiFactorAuthenticationUntrustDevice
     *
     * Multi Factor Authentication Untrust Device.
     *
     */
    public function testMultiFactorAuthenticationUntrustDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for multiFactorAuthenticationVerifyOtp
     *
     * Multi Factor Authentication Verify Otp.
     *
     */
    public function testMultiFactorAuthenticationVerifyOtp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refresh
     *
     * Refresh.
     *
     */
    public function testRefresh()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for swapTokenGoogle
     *
     * Swap Token Google.
     *
     */
    public function testSwapTokenGoogle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for swapTokenMicrosoft
     *
     * Swap Token Microsoft.
     *
     */
    public function testSwapTokenMicrosoft()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateLoginEnabled
     *
     * Update Login Enabled.
     *
     */
    public function testUpdateLoginEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
