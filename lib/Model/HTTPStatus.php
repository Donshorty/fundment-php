<?php
/**
 * HTTPStatus
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fundment API
 *
 * <div><a href=\"/staging/\"><h1>Getting started</h1></a> </div>
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * HTTPStatus Class Doc Comment
 *
 * @category Class
 * @description HTTP status codes and reason phrases  Status codes from the following RFCs are all observed:      * RFC 7231: Hypertext Transfer Protocol (HTTP/1.1), obsoletes 2616     * RFC 6585: Additional HTTP Status Codes     * RFC 3229: Delta encoding in HTTP     * RFC 4918: HTTP Extensions for WebDAV, obsoletes 2518     * RFC 5842: Binding Extensions to WebDAV     * RFC 7238: Permanent Redirect     * RFC 2295: Transparent Content Negotiation in HTTP     * RFC 2774: An HTTP Extension Framework     * RFC 7540: Hypertext Transfer Protocol Version 2 (HTTP/2)
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HTTPStatus
{
    /**
     * Possible values of this enum
     */
    public const NUMBER_100 = 100;

    public const NUMBER_101 = 101;

    public const NUMBER_102 = 102;

    public const NUMBER_200 = 200;

    public const NUMBER_201 = 201;

    public const NUMBER_202 = 202;

    public const NUMBER_203 = 203;

    public const NUMBER_204 = 204;

    public const NUMBER_205 = 205;

    public const NUMBER_206 = 206;

    public const NUMBER_207 = 207;

    public const NUMBER_208 = 208;

    public const NUMBER_226 = 226;

    public const NUMBER_300 = 300;

    public const NUMBER_301 = 301;

    public const NUMBER_302 = 302;

    public const NUMBER_303 = 303;

    public const NUMBER_304 = 304;

    public const NUMBER_305 = 305;

    public const NUMBER_307 = 307;

    public const NUMBER_308 = 308;

    public const NUMBER_400 = 400;

    public const NUMBER_401 = 401;

    public const NUMBER_402 = 402;

    public const NUMBER_403 = 403;

    public const NUMBER_404 = 404;

    public const NUMBER_405 = 405;

    public const NUMBER_406 = 406;

    public const NUMBER_407 = 407;

    public const NUMBER_408 = 408;

    public const NUMBER_409 = 409;

    public const NUMBER_410 = 410;

    public const NUMBER_411 = 411;

    public const NUMBER_412 = 412;

    public const NUMBER_413 = 413;

    public const NUMBER_414 = 414;

    public const NUMBER_415 = 415;

    public const NUMBER_416 = 416;

    public const NUMBER_417 = 417;

    public const NUMBER_421 = 421;

    public const NUMBER_422 = 422;

    public const NUMBER_423 = 423;

    public const NUMBER_424 = 424;

    public const NUMBER_426 = 426;

    public const NUMBER_428 = 428;

    public const NUMBER_429 = 429;

    public const NUMBER_431 = 431;

    public const NUMBER_500 = 500;

    public const NUMBER_501 = 501;

    public const NUMBER_502 = 502;

    public const NUMBER_503 = 503;

    public const NUMBER_504 = 504;

    public const NUMBER_505 = 505;

    public const NUMBER_506 = 506;

    public const NUMBER_507 = 507;

    public const NUMBER_508 = 508;

    public const NUMBER_510 = 510;

    public const NUMBER_511 = 511;

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NUMBER_100,
            self::NUMBER_101,
            self::NUMBER_102,
            self::NUMBER_200,
            self::NUMBER_201,
            self::NUMBER_202,
            self::NUMBER_203,
            self::NUMBER_204,
            self::NUMBER_205,
            self::NUMBER_206,
            self::NUMBER_207,
            self::NUMBER_208,
            self::NUMBER_226,
            self::NUMBER_300,
            self::NUMBER_301,
            self::NUMBER_302,
            self::NUMBER_303,
            self::NUMBER_304,
            self::NUMBER_305,
            self::NUMBER_307,
            self::NUMBER_308,
            self::NUMBER_400,
            self::NUMBER_401,
            self::NUMBER_402,
            self::NUMBER_403,
            self::NUMBER_404,
            self::NUMBER_405,
            self::NUMBER_406,
            self::NUMBER_407,
            self::NUMBER_408,
            self::NUMBER_409,
            self::NUMBER_410,
            self::NUMBER_411,
            self::NUMBER_412,
            self::NUMBER_413,
            self::NUMBER_414,
            self::NUMBER_415,
            self::NUMBER_416,
            self::NUMBER_417,
            self::NUMBER_421,
            self::NUMBER_422,
            self::NUMBER_423,
            self::NUMBER_424,
            self::NUMBER_426,
            self::NUMBER_428,
            self::NUMBER_429,
            self::NUMBER_431,
            self::NUMBER_500,
            self::NUMBER_501,
            self::NUMBER_502,
            self::NUMBER_503,
            self::NUMBER_504,
            self::NUMBER_505,
            self::NUMBER_506,
            self::NUMBER_507,
            self::NUMBER_508,
            self::NUMBER_510,
            self::NUMBER_511
        ];
    }
}


